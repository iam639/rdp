name: FreeRDP

on: workflow_dispatch

jobs:
  build:

    runs-on: windows-latest
    timeout-minutes: 9999

    steps:
    - name: Downloading Ngrok.
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
        Invoke-WebRequest https://raw.githubusercontent.com/30dayscoding/rdp/main/start.bat -OutFile start.bat
        Invoke-WebRequest https://raw.githubusercontent.com/30dayscoding/rdp/main/wallpaper.jpg -OutFile wallpaper.jpg
        Invoke-WebRequest https://raw.githubusercontent.com/30dayscoding/rdp/main/wallpaper.bat -OutFile wallpaper.bat

    - name: Extracting Ngrok Files.
      run: Expand-Archive ngrok.zip

    - name: Connecting to your Ngrok account.
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Activating RDP access.
      run: | 
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        copy wallpaper.jpg D:\a\wallpaper.jpg
        copy wallpaper.bat D:\a\wallpaper.bat

    - name: Creating Tunnel (background)
      run: .\ngrok\ngrok.exe tcp 3389 > ngrok_log.txt &

    - name: Get Ngrok Public IP and Port
      shell: pwsh
      run: |
        $maxTries = 30
        $try = 0
        while ($try -lt $maxTries) {
          try {
            $api = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels -ErrorAction Stop
            if ($api.tunnels.Count -gt 0) { break }
          } catch { Start-Sleep -Seconds 1 }
          $try++
        }
        if (-not $api -or $api.tunnels.Count -eq 0) {
          Write-Output "‚ùå Ngrok tunnel not found!"
          exit 1
        }
        $pub = $api.tunnels[0].public_url
        Write-Output "üîê Ngrok public url: $pub"
        $clean = $pub -replace '^tcp://',''
        Write-Output "üñ•Ô∏è Use this in RDP: $clean"

    - name: Connecting to your RDP.
      run: cmd /c start.bat

    - name: RDP is ready!
      run: | 
        Invoke-WebRequest https://github.com/30dayscoding/rdp/raw/main/loop.ps1 -OutFile loop.ps1
        ./loop.ps1
